variables 
-----------
variables are like containers for storing values we can create a variable using these keywords (let var const)

ex:
var age = 28;
let age = 30;
const name ='santhosh';

dom
------
document object model(dom) ==> manipulating html & css html dom tree
dom methods ==> getelement byid
events ==> onclick event

dom is the structured representation of the content in the document created by browser

tree structured representation of html document created by the browser it allows js to change the document  structure style & content 

the dom tree represents html documents as nodes each node  is refered to  as an object 

it is the entry point of the dom  

to access any  html element u should  always start  with accessing  the document object first 

document.getElementById('headingElement)

getElementById method helps to select the html element with specific id


2.4 Properties
2.4.1 textContent
To manipulate the text within the HTML Element, we use textContent Property.

document.getElementById('headingElement).textContent ='Latest technologies'

2.4.2 style
The style property is used to get or set a specific style of an HTML Element using different CSS properties.

Use Camel Case naming convention (starting letter of each word should be in the upper case except for the first word) for naming the Style Object Properties.

For example, color, fontFamily, backgroundColor, etc.


primitive data types ==> undefined,string,boolean,number

convert string into number ==> parseInt

conditionals ==> if else statements



datatypes
-----------
data types are of 2 types

primitive types & reference types

primitive types
----------------
number,boolean,string,undefined,etc

typeof is used to find the data type of the value

number ==> all the numbers are of number type

example
---------
let x = 100,y=5.5;
console.log(typeof(x),typeof(y))


boolean ==> values are true or false

ex
--
let isActive = true;
console.log(typeof(isActive));
console.log(typeof(true));

string ==> string is a stream of characters string should be enclosed with single-quotes ==> 'hello',double-quotes==> "Hi",back-tick==>`ravi`

ex
--
let name = 'anudeep';
console.log(typeof(name));

undefined ==> if a value is not assigned to the variable then it takes  undefined as its value

in js undefined refers to value not being assigned

let age;
console.log(age);

the parseInt() function accept a string  & convert into integer

'0' ==> 0


conditional statements
-----------------------
conditional statements allows  you to execute  a block of code  only when specified condition is true


ex
--
if(condition A)
{
    block -1
}
else if(conditon B)
{
    block-2

}
else
{
    block -3
}


Math Functions ==> Math.ceil(),Math.random()

input element ==> text input, password input

comaparison operators ==> loose equals to(==) strict equal to(===)


Math Functions
--------------
Math.randon() ==> will generate a random number

Math.ceil() ==> math.ceil function always rounds a number up to the nxt largest ineteger 

console.log(Math.ceil(47.14389181180687));


html input element
-------------------
creates a interactive controls to acceot the data from user

different types of inputs 
--------------------------
text,password,radio buttons,checkbox,date

text-input
------------
comaparison operators
------------------
diff b/w ==(loose equal) & strict equal(====)

example
-------
console.log(2 == '2') ==> true will check value not the the data type
console.log(2 === '2') ==> false will check for value & data type as well

in python(2 =='2') ==> false 


arrays ==> methods,operations

functions ==> declartion & expressions

dom maniulations ==> classList.remove()classList.add(),appendChild(),createElement()

data structures allow us to store & organize  data efficiently

this will allow us to easily access & perform operation on the data 

in js we have  builtin ds like arrays,objects,maps,sets


python ==> lis holds a ordered sequence of items
array holds a ordered sequence of items

arrays
-------
let myArray = [5,'six',2,8.2];
console.log(myArray);

to access any item in array 

array will have index starts from (0-)

console.log(myArray[0]);
console.log(myArray[1]);
console.log(myArray[2]);
console.log(myArray[3]);


array is mutable(changeable)

//modifying an array item
myArray[1] = 6;
console.log(myArray);


to find the length of an array
----------------------------------
python: len() is used to find the no of items in the list

js:array.length is used to find the length of an array


how to add/remove items in array
---------------------------------
push() ==> add a new item in the end of the array 
ex:
myArray.push('true');
myArray.push('never');
console.log(myArray);


pop() ==> removes a item from the end of the array & returns that item
//removing an item
let lastItem = myArray.pop();
console.log(myArray);
console.log(lastItem);

dom manipulations
-----------------
createElement() ==> is used to create teh ttag dynamically from js 
classList.add()
classList.remove()
appendChild()




createElement
---------------
let h3Element = document.createElement('h1');
h3Element.textContent = 'Heading-3'
h3Element.classList.add('className');
h3Element.classList.remove('className');


function expressions
----------------------
let showMsg = function()
{
    console.log('Hello');
}

showMsg()


objects
-------

objects ==> creating an object

object properties ==> dot notation ,bracket notation,object destructing,

property value ==> function,array,object

in js we have builtin ds like ==> arrays,sets,maps,objects

an object is a set of collection of properties

a property  is an association  between a name(key) & value

example:a person has a name & age city,etc these are the properties of a person

key|value
--- |-----
name| naveen
age | 25
city| Hyd

we can add properties {} as key:value pair

let person:{name:'gopi',age:25,city:'kakinada'}

object naming convention
-------------------------

identifiers
------------
a valid identifier  should follow the below rules

it can contain alphanumeric charcters & _ and $

it cant start with a number

ex:name,$name,_name,name24 

not 12name,name 56

to use invalid identifier as key  we have to specify  them in quotes

accessing object properties
----------------------------
dot notation 
bracket notation

dot notation
-------------
let person = { name: "gopi", age: 25, city: "kakinada","1":"value1","my choice":"value2" };
console.log(person);
console.log(person.name);
console.log(person.age);

dot notation is used for only valid identifier 

we will get the error

bracket notation
-----------------
using bracket notation we can access invalid & valid identifier 
console.log(person);
console.log(person['city']);
console.log(person['age']);
console.log(person['my choice']);

accessing non existing properties
----------------------------------
console.log(person.gender); ==> will gives undefined

variable as key

let key = 'name';
console.log(person[key]); ==> gopi
console.log(person.key); ==> undefined


object destructuring
--------------------
to unpack props from object  we use object destructuring

the variable name should match with the key of an object

property value
----------------
the value of the object property  can be 

function,array,object many more

function as a value
--------------------
let person = { 
name:"gopi", 
age: 25, 
city:"kakinada",
run:function()
{
    console.log('start runnning...........')
}
};


array as a value
----------------
let person = { 
name:"gopi", 
age: 25, 
city:"kakinada",
run:function()
{
    console.log('start runnning...........')
},hobbies:['Playing Chess','Singing']
};

object as a value
-------------------
car:{name:'bmw',model:'320d',color:'white'}



Methods
---------
a javascript method is a property containing  a function definition

document.createElement();

document ==> object
createElement() ==> key,method


Todos application
-----------------
html input  element ==> checkbox
html elements ==> label
dom manipulations ==> htmlfor,setAttribute()



<input type="checkbox" id="myCheckbox">
<label for="myCheckbox">Graduated</label>


setAttribute()
----------------
to set a value of an attribute for a specified  element we use  setAttribute() method

if the attribute already exists the value of the attribute gets updated

element.setAttribute(attribute,value)

Loops ==> for of loop,for in loop,forloop,whileloop

todo application ==> building multiple todos dynamically

javasacript ==> objects,variables,arrays,etc

dom ==> createElement(),textContent etc


Loops
------
loop as allow us to execute a block of code several times for of loop,for in loop,forloop,whileloop

to iterate on sequence we use for of loop

for(let eachItem of iterable)

example
--------
python ==> 
my_list = [10,20,30]
for each_item in my_list:
    print(each_item)

javascript
-----------
let my_list = [10,20,30,40];
for(each_item of my_list)
{
    console.log(each_item)
}
  
















datatypes(string,Number,Bigint,boolean,array,object) 

myArray = [1,six",false]

myArray[0]

console.log(myarray);

object 

key:value

{name:'rj',
age:25}


myObject.name


operators(as,log && || ! ?,
conditional statements if 
control statements for for each for in for of 
arrays
objects
functions



ES6
async/await
promises
template string



localStorage stores key-value pairs as strings.

Data persists even after refreshing or closing the browser.

You can only store strings directly, so for objects/arrays, use JSON.stringify() and JSON.parse().
